"""
What is the result of Exercise R-10.9 when collisions are handled by dou-
ble hashing using the secondary hash function h ? (k) = 7âˆ’(k mod 7)?

[None, None, None, None, None, None, None, None, 12, None, None]
[None, None, None, None, None, 44, None, None, 12, None, None]
[13, None, None, None, None, 44, None, None, 12, None, None]
...
...
...
[13, None, None, 88, None, 44, None, None, 12, None, None]
...
[13, None, 23, 88, None, 44, None, None, 12, None, None]
[13, 94, 23, 88, None, 44, None, None, 12, None, None]
...
...
...
...
[13, 94, 23, 88, None, 44, 11, None, 12, None, None]
...
[13, 94, 23, 88, 39, 44, 11, None, 12, None, None]
[13, 94, 23, 88, 39, 44, 11, None, 12, None, 20]
[13, 94, 23, 88, 39, 44, 11, None, 12, 16, 20]
...
...
...
...
...
...
...
...
...
...
[13, 94, 23, 88, 39, 44, 11, 5, 12, 16, 20]
"""

from time import sleep

table = [None] * 11

for x in [12, 44, 13, 88, 23, 94, 11, 39, 20, 16, 5]:
    oryginal = (3 * x + 5) % 11
    mul = 1  # power of 2
    hh = oryginal
    while True:
        if table[hh] is None:
            table[hh] = x
            break
        hh = (oryginal + mul * (7 - (x % 7))) % 11
        print('...')
        mul += 1
    print(table)